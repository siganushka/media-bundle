<?php

declare(strict_types=1);

namespace Siganushka\MediaBundle\Tests\Storage;

use PHPUnit\Framework\TestCase;
use Siganushka\MediaBundle\Storage\LocalStorage;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\HttpFoundation\RequestStack;
use Symfony\Component\HttpFoundation\UrlHelper;
use Symfony\Component\Routing\RequestContext;

class LocalStorageTest extends TestCase
{
    protected UrlHelper $urlHelper;
    protected Filesystem $filesystem;

    protected function setUp(): void
    {
        $this->urlHelper = new UrlHelper(new RequestStack(), new RequestContext());
        $this->filesystem = new Filesystem();
    }

    public function testAll(): void
    {
        $file1 = $this->filesystem->tempnam(sys_get_temp_dir(), 'test_');
        $file2 = $this->filesystem->tempnam(sys_get_temp_dir(), 'test_');

        $storage = new LocalStorage($this->urlHelper, sys_get_temp_dir());

        $url1 = $storage->save($file1);
        static::assertFileDoesNotExist($file1);
        static::assertSame(\sprintf('http://localhost/uploads/%s', pathinfo($file1, \PATHINFO_BASENAME)), $url1);

        $url2 = $storage->save($file2, 'foo/bar/baz');
        static::assertFileDoesNotExist($file2);
        static::assertSame('http://localhost/uploads/foo/bar/baz', $url2);

        $storage->delete($url1);
        $storage->delete($url2);

        // Remove dir generated by tests
        $this->filesystem->remove(\sprintf('%s/uploads', sys_get_temp_dir()));
    }
}
